{"version":3,"sources":["webpack:///./node_modules/core-js/internals/same-value.js","webpack:///./node_modules/core-js/modules/es.object.is.js","webpack:///../../../src/components/VCounter/VCounter.ts","webpack:///../../../src/components/VCounter/index.ts","webpack:///../../../src/mixins/intersectable/index.ts","webpack:///../../../src/components/VTextField/VTextField.ts"],"names":["module","exports","Object","is","x","y","$","target","stat","mixins","name","functional","props","value","type","Number","default","max","String","render","parseInt","content","isGreater","h","staticClass","class","ctx","window","mounted","this","onObserve","destroyed","methods","i","length","options","callback","console","baseMixins","onVisible","dirtyTypes","directives","ripple","inheritAttrs","appendOuterIcon","autofocus","clearable","clearIcon","counter","Boolean","counterValue","filled","flat","fullWidth","label","outlined","placeholder","prefix","prependInnerIcon","reverse","rounded","shaped","singleLine","solo","soloInverted","suffix","data","badInput","labelWidth","prefixWidth","prependWidth","initialValue","isBooted","isClearing","computed","classes","VInput","computedColor","color","computedCounterValue","internalValue","hasCounter","hasDetails","get","set","isDirty","lazyValue","toString","isEnclosed","isLabelActive","isSingle","isSolo","labelPosition","offset","labelValue","$vuetify","rtl","left","right","showLabel","hasLabel","isFocused","watch","created","$attrs","hasOwnProperty","requestAnimationFrame","focus","blur","clearableCallback","$refs","input","genAppendSlot","slot","$slots","genIcon","genSlot","genPrependInnerSlot","genIconSlot","genInputSlot","prepend","genClearIcon","undefined","attrs","disabled","genCounter","attrs$","$createElement","dark","light","genControl","genDefaultSlot","genFieldset","genLabel","absolute","focused","for","VLabel","genLegend","width","span","domProps","innerHTML","style","genInput","listeners","id","readonly","on","keydown","onKeyDown","ref","genMessages","messagesNode","counterNode","genTextFieldSlot","genAffix","onBlur","e","$nextTick","onClick","onFocus","document","$emit","onInput","onMouseDown","onMouseUp","setLabelWidth","Math","scrollWidth","$el","setPrefixWidth","setPrependWidth","tryAutofocus","updateValue"],"mappings":"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","file":"js/chunk-35823db7.48d06b1a.js","sourcesContent":["// `SameValue` abstract operation\n// https://tc39.github.io/ecma262/#sec-samevalue\nmodule.exports = Object.is || function is(x, y) {\n  // eslint-disable-next-line no-self-compare\n  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;\n};\n","var $ = require('../internals/export');\nvar is = require('../internals/same-value');\n\n// `Object.is` method\n// https://tc39.github.io/ecma262/#sec-object.is\n$({ target: 'Object', stat: true }, {\n  is: is\n});\n","// Styles\nimport './VCounter.sass'\n\n// Mixins\nimport Themeable, { functionalThemeClasses } from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(Themeable).extend({\n  name: 'v-counter',\n\n  functional: true,\n\n  props: {\n    value: {\n      type: [Number, String],\n      default: '',\n    },\n    max: [Number, String],\n  },\n\n  render (h, ctx): VNode {\n    const { props } = ctx\n    const max = parseInt(props.max, 10)\n    const value = parseInt(props.value, 10)\n    const content = max ? `${value} / ${max}` : String(props.value)\n    const isGreater = max && (value > max)\n\n    return h('div', {\n      staticClass: 'v-counter',\n      class: {\n        'error--text': isGreater,\n        ...functionalThemeClasses(ctx),\n      },\n    }, content)\n  },\n})\n","import VCounter from './VCounter'\n\nexport { VCounter }\nexport default VCounter\n","// Directives\nimport Intersect from '../../directives/intersect'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\nexport default function intersectable (options: { onVisible: string[] }) {\n  if (typeof window === 'undefined' || !('IntersectionObserver' in window)) {\n    // do nothing because intersection observer is not available\n    return Vue.extend({ name: 'intersectable' })\n  }\n\n  return Vue.extend({\n    name: 'intersectable',\n\n    mounted () {\n      Intersect.inserted(this.$el as HTMLElement, {\n        name: 'intersect',\n        value: this.onObserve,\n      })\n    },\n\n    destroyed () {\n      Intersect.unbind(this.$el as HTMLElement)\n    },\n\n    methods: {\n      onObserve (entries: IntersectionObserverEntry[], observer: IntersectionObserver, isIntersecting: boolean) {\n        if (!isIntersecting) return\n\n        for (let i = 0, length = options.onVisible.length; i < length; i++) {\n          const callback = (this as any)[options.onVisible[i]]\n\n          if (typeof callback === 'function') {\n            callback()\n            continue\n          }\n\n          consoleWarn(options.onVisible[i] + ' method is not available on the instance but referenced in intersectable mixin options')\n        }\n      },\n    },\n  })\n}\n","// Styles\nimport './VTextField.sass'\n\n// Extensions\nimport VInput from '../VInput'\n\n// Components\nimport VCounter from '../VCounter'\nimport VLabel from '../VLabel'\n\n// Mixins\nimport Intersectable from '../../mixins/intersectable'\nimport Loadable from '../../mixins/loadable'\nimport Validatable from '../../mixins/validatable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { convertToUnit, keyCodes } from '../../util/helpers'\nimport { breaking, consoleWarn } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode, PropType } from 'vue/types'\n\nconst baseMixins = mixins(\n  VInput,\n  Intersectable({\n    onVisible: [\n      'setLabelWidth',\n      'setPrefixWidth',\n      'setPrependWidth',\n      'tryAutofocus',\n    ],\n  }),\n  Loadable,\n)\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-text-field',\n\n  directives: { ripple },\n\n  inheritAttrs: false,\n\n  props: {\n    appendOuterIcon: String,\n    autofocus: Boolean,\n    clearable: Boolean,\n    clearIcon: {\n      type: String,\n      default: '$clear',\n    },\n    counter: [Boolean, Number, String],\n    counterValue: Function as PropType<(value: any) => number>,\n    filled: Boolean,\n    flat: Boolean,\n    fullWidth: Boolean,\n    label: String,\n    outlined: Boolean,\n    placeholder: String,\n    prefix: String,\n    prependInnerIcon: String,\n    reverse: Boolean,\n    rounded: Boolean,\n    shaped: Boolean,\n    singleLine: Boolean,\n    solo: Boolean,\n    soloInverted: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n  },\n\n  data: () => ({\n    badInput: false,\n    labelWidth: 0,\n    prefixWidth: 0,\n    prependWidth: 0,\n    initialValue: null,\n    isBooted: false,\n    isClearing: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        ...VInput.options.computed.classes.call(this),\n        'v-text-field': true,\n        'v-text-field--full-width': this.fullWidth,\n        'v-text-field--prefix': this.prefix,\n        'v-text-field--single-line': this.isSingle,\n        'v-text-field--solo': this.isSolo,\n        'v-text-field--solo-inverted': this.soloInverted,\n        'v-text-field--solo-flat': this.flat,\n        'v-text-field--filled': this.filled,\n        'v-text-field--is-booted': this.isBooted,\n        'v-text-field--enclosed': this.isEnclosed,\n        'v-text-field--reverse': this.reverse,\n        'v-text-field--outlined': this.outlined,\n        'v-text-field--placeholder': this.placeholder,\n        'v-text-field--rounded': this.rounded,\n        'v-text-field--shaped': this.shaped,\n      }\n    },\n    computedColor (): string | undefined {\n      const computedColor = Validatable.options.computed.computedColor.call(this)\n\n      if (!this.soloInverted || !this.isFocused) return computedColor\n\n      return this.color || 'primary'\n    },\n    computedCounterValue (): number {\n      if (typeof this.counterValue === 'function') {\n        return this.counterValue(this.internalValue)\n      }\n      return (this.internalValue || '').toString().length\n    },\n    hasCounter (): boolean {\n      return this.counter !== false && this.counter != null\n    },\n    hasDetails (): boolean {\n      return VInput.options.computed.hasDetails.call(this) || this.hasCounter\n    },\n    internalValue: {\n      get (): any {\n        return this.lazyValue\n      },\n      set (val: any) {\n        this.lazyValue = val\n        this.$emit('input', this.lazyValue)\n      },\n    },\n    isDirty (): boolean {\n      return (this.lazyValue != null &&\n        this.lazyValue.toString().length > 0) ||\n        this.badInput\n    },\n    isEnclosed (): boolean {\n      return (\n        this.filled ||\n        this.isSolo ||\n        this.outlined\n      )\n    },\n    isLabelActive (): boolean {\n      return this.isDirty || dirtyTypes.includes(this.type)\n    },\n    isSingle (): boolean {\n      return (\n        this.isSolo ||\n        this.singleLine ||\n        this.fullWidth ||\n        // https://material.io/components/text-fields/#filled-text-field\n        (this.filled && !this.hasLabel)\n      )\n    },\n    isSolo (): boolean {\n      return this.solo || this.soloInverted\n    },\n    labelPosition (): Record<'left' | 'right', string | number | undefined> {\n      let offset = (this.prefix && !this.labelValue) ? this.prefixWidth : 0\n\n      if (this.labelValue && this.prependWidth) offset -= this.prependWidth\n\n      return (this.$vuetify.rtl === this.reverse) ? {\n        left: offset,\n        right: 'auto',\n      } : {\n        left: 'auto',\n        right: offset,\n      }\n    },\n    showLabel (): boolean {\n      return this.hasLabel && (!this.isSingle || (!this.isLabelActive && !this.placeholder))\n    },\n    labelValue (): boolean {\n      return !this.isSingle &&\n        Boolean(this.isFocused || this.isLabelActive || this.placeholder)\n    },\n  },\n\n  watch: {\n    labelValue: 'setLabelWidth',\n    outlined: 'setLabelWidth',\n    label () {\n      this.$nextTick(this.setLabelWidth)\n    },\n    prefix () {\n      this.$nextTick(this.setPrefixWidth)\n    },\n    isFocused: 'updateValue',\n    value (val) {\n      this.lazyValue = val\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('box')) {\n      breaking('box', 'filled', this)\n    }\n\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('browser-autocomplete')) {\n      breaking('browser-autocomplete', 'autocomplete', this)\n    }\n\n    /* istanbul ignore if */\n    if (this.shaped && !(this.filled || this.outlined || this.isSolo)) {\n      consoleWarn('shaped should be used with either filled or outlined', this)\n    }\n  },\n\n  mounted () {\n    this.autofocus && this.tryAutofocus()\n    this.setLabelWidth()\n    this.setPrefixWidth()\n    this.setPrependWidth()\n    requestAnimationFrame(() => (this.isBooted = true))\n  },\n\n  methods: {\n    /** @public */\n    focus () {\n      this.onFocus()\n    },\n    /** @public */\n    blur (e?: Event) {\n      // https://github.com/vuetifyjs/vuetify/issues/5913\n      // Safari tab order gets broken if called synchronous\n      window.requestAnimationFrame(() => {\n        this.$refs.input && this.$refs.input.blur()\n      })\n    },\n    clearableCallback () {\n      this.$refs.input && this.$refs.input.focus()\n      this.$nextTick(() => this.internalValue = null)\n    },\n    genAppendSlot () {\n      const slot = []\n\n      if (this.$slots['append-outer']) {\n        slot.push(this.$slots['append-outer'] as VNode[])\n      } else if (this.appendOuterIcon) {\n        slot.push(this.genIcon('appendOuter'))\n      }\n\n      return this.genSlot('append', 'outer', slot)\n    },\n    genPrependInnerSlot () {\n      const slot = []\n\n      if (this.$slots['prepend-inner']) {\n        slot.push(this.$slots['prepend-inner'] as VNode[])\n      } else if (this.prependInnerIcon) {\n        slot.push(this.genIcon('prependInner'))\n      }\n\n      return this.genSlot('prepend', 'inner', slot)\n    },\n    genIconSlot () {\n      const slot = []\n\n      if (this.$slots['append']) {\n        slot.push(this.$slots['append'] as VNode[])\n      } else if (this.appendIcon) {\n        slot.push(this.genIcon('append'))\n      }\n\n      return this.genSlot('append', 'inner', slot)\n    },\n    genInputSlot () {\n      const input = VInput.options.methods.genInputSlot.call(this)\n\n      const prepend = this.genPrependInnerSlot()\n\n      if (prepend) {\n        input.children = input.children || []\n        input.children.unshift(prepend)\n      }\n\n      return input\n    },\n    genClearIcon () {\n      if (!this.clearable) return null\n\n      const data = this.isDirty ? undefined : { attrs: { disabled: true } }\n\n      return this.genSlot('append', 'inner', [\n        this.genIcon('clear', this.clearableCallback, data),\n      ])\n    },\n    genCounter () {\n      if (!this.hasCounter) return null\n\n      const max = this.counter === true ? this.attrs$.maxlength : this.counter\n\n      return this.$createElement(VCounter, {\n        props: {\n          dark: this.dark,\n          light: this.light,\n          max,\n          value: this.computedCounterValue,\n        },\n      })\n    },\n    genControl () {\n      return VInput.options.methods.genControl.call(this)\n    },\n    genDefaultSlot () {\n      return [\n        this.genFieldset(),\n        this.genTextFieldSlot(),\n        this.genClearIcon(),\n        this.genIconSlot(),\n        this.genProgress(),\n      ]\n    },\n    genFieldset () {\n      if (!this.outlined) return null\n\n      return this.$createElement('fieldset', {\n        attrs: {\n          'aria-hidden': true,\n        },\n      }, [this.genLegend()])\n    },\n    genLabel () {\n      if (!this.showLabel) return null\n\n      const data = {\n        props: {\n          absolute: true,\n          color: this.validationState,\n          dark: this.dark,\n          disabled: this.isDisabled,\n          focused: !this.isSingle && (this.isFocused || !!this.validationState),\n          for: this.computedId,\n          left: this.labelPosition.left,\n          light: this.light,\n          right: this.labelPosition.right,\n          value: this.labelValue,\n        },\n      }\n\n      return this.$createElement(VLabel, data, this.$slots.label || this.label)\n    },\n    genLegend () {\n      const width = !this.singleLine && (this.labelValue || this.isDirty) ? this.labelWidth : 0\n      const span = this.$createElement('span', {\n        domProps: { innerHTML: '&#8203;' },\n      })\n\n      return this.$createElement('legend', {\n        style: {\n          width: !this.isSingle ? convertToUnit(width) : undefined,\n        },\n      }, [span])\n    },\n    genInput () {\n      const listeners = Object.assign({}, this.listeners$)\n      delete listeners['change'] // Change should not be bound externally\n\n      return this.$createElement('input', {\n        style: {},\n        domProps: {\n          value: (this.type === 'number' && Object.is(this.lazyValue, -0)) ? '-0' : this.lazyValue,\n        },\n        attrs: {\n          ...this.attrs$,\n          autofocus: this.autofocus,\n          disabled: this.isDisabled,\n          id: this.computedId,\n          placeholder: this.placeholder,\n          readonly: this.isReadonly,\n          type: this.type,\n        },\n        on: Object.assign(listeners, {\n          blur: this.onBlur,\n          input: this.onInput,\n          focus: this.onFocus,\n          keydown: this.onKeyDown,\n        }),\n        ref: 'input',\n      })\n    },\n    genMessages () {\n      if (!this.showDetails) return null\n\n      const messagesNode = VInput.options.methods.genMessages.call(this)\n      const counterNode = this.genCounter()\n\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__details',\n      }, [\n        messagesNode,\n        counterNode,\n      ])\n    },\n    genTextFieldSlot () {\n      return this.$createElement('div', {\n        staticClass: 'v-text-field__slot',\n      }, [\n        this.genLabel(),\n        this.prefix ? this.genAffix('prefix') : null,\n        this.genInput(),\n        this.suffix ? this.genAffix('suffix') : null,\n      ])\n    },\n    genAffix (type: 'prefix' | 'suffix') {\n      return this.$createElement('div', {\n        class: `v-text-field__${type}`,\n        ref: type,\n      }, this[type])\n    },\n    onBlur (e?: Event) {\n      this.isFocused = false\n      e && this.$nextTick(() => this.$emit('blur', e))\n    },\n    onClick () {\n      if (this.isFocused || this.isDisabled || !this.$refs.input) return\n\n      this.$refs.input.focus()\n    },\n    onFocus (e?: Event) {\n      if (!this.$refs.input) return\n\n      if (document.activeElement !== this.$refs.input) {\n        return this.$refs.input.focus()\n      }\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        e && this.$emit('focus', e)\n      }\n    },\n    onInput (e: Event) {\n      const target = e.target as HTMLInputElement\n      this.internalValue = target.value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.enter) this.$emit('change', this.internalValue)\n\n      this.$emit('keydown', e)\n    },\n    onMouseDown (e: Event) {\n      // Prevent input from being blurred\n      if (e.target !== this.$refs.input) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n\n      VInput.options.methods.onMouseDown.call(this, e)\n    },\n    onMouseUp (e: Event) {\n      if (this.hasMouseDown) this.focus()\n\n      VInput.options.methods.onMouseUp.call(this, e)\n    },\n    setLabelWidth () {\n      if (!this.outlined) return\n\n      this.labelWidth = this.$refs.label\n        ? Math.min(this.$refs.label.scrollWidth * 0.75 + 6, (this.$el as HTMLElement).offsetWidth - 24)\n        : 0\n    },\n    setPrefixWidth () {\n      if (!this.$refs.prefix) return\n\n      this.prefixWidth = this.$refs.prefix.offsetWidth\n    },\n    setPrependWidth () {\n      if (!this.outlined || !this.$refs['prepend-inner']) return\n\n      this.prependWidth = this.$refs['prepend-inner'].offsetWidth\n    },\n    tryAutofocus () {\n      if (\n        !this.autofocus ||\n        typeof document === 'undefined' ||\n        !this.$refs.input ||\n        document.activeElement === this.$refs.input\n      ) return false\n\n      this.$refs.input.focus()\n\n      return true\n    },\n    updateValue (val: boolean) {\n      // Sets validationState from validatable\n      this.hasColor = val\n\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n  },\n})\n"],"sourceRoot":""}